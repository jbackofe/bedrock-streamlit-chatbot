name: Deploy to AWS ECR

on:
  push:
    branches:
      - main  # Set this to your default branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Output image URI
      run: 'echo "Image URI: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}"'

    - name: Prepare Beanstalk deployment package
      run: |
        # Create a Dockerrun.aws.json file with the new image URI
        echo '{
          "AWSEBDockerrunVersion": "1",
          "Image": {
            "Name": "${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}",
            "Update": "true"
          },
          "Ports": [
            {
              "ContainerPort": "80"
            }
          ]
        }' > Dockerrun.aws.json

        # Log the contents of Dockerrun.aws.json to verify its correctness
        echo "Dockerrun.aws.json contents:"
        cat Dockerrun.aws.json
        
        # Zip the Dockerrun.aws.json file (include any other necessary files)
        zip deployment-package.zip Dockerrun.aws.json

    - name: Deploy to Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v18
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: chatbot-tutorial-beanstalk
        environment_name: Chatbot-tutorial-beanstalk-env
        version_label: ${{ github.sha }}
        region: ${{ secrets.AWS_REGION }}
        deployment_package: deployment-package.zip
